window.VERSION = "0.0.3";var pmb_im={controllers:angular.module("pmb_im.controllers",[]),services:angular.module("pmb_im.services",[])};pmb_im.app=angular.module("pmb_im",["ionic","ionic.wizard","ion-autocomplete","leaflet-directive","pmb_im.controllers","pmb_im.services","ngCordova","ionic-cache-src"]).constant("ApiImEndpoint",{url:"http://www.montevideo.gub.uy"}).constant("ApiDataEndpoint",{url:"/data"}).run(["$ionicPlatform","$rootScope","$cordovaKeyboard",function(e,n,t){n.VERSION=window.VERSION,e.ready(function(){window.cordova&&window.cordova.plugins.Keyboard&&cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),ionic.Platform.isFullScreen=!1,window.StatusBar&&StatusBar.styleDefault()})}]).config(["$stateProvider","$urlRouterProvider","$compileProvider","$ionicConfigProvider",function(e,n,t,o){t.debugInfoEnabled(!1),e.state("app",{cache:!1,url:"/app","abstract":!0,templateUrl:"templates/menu.html",controller:"MapController"}).state("app.map",{cache:!1,url:"/map/",views:{menuContent:{templateUrl:"templates/map.html",controller:"PMBCtrl"}}}).state("app.intro",{cache:!1,url:"/intro",views:{menuContent:{templateUrl:"templates/intro.html",controller:"IntroCtrl"}}}),n.otherwise("/app/intro")}]),pmb_im.controllers.controller("AutoCompleteCtrl",["$scope","leafletData","locationAPI",function(e,n,t){e.ionAutocompleteElement=angular.element(document.getElementsByClassName("ion-autocomplete")),e.ionAutocompleteElement.bind("touchend click focus",e.onClick),e.onClick=function(){e.ionAutocompleteElement.controller("ionAutocomplete").showModal()},e.searchLocation=function(e){if(e)return t.searchLocationByStr(e)}}]),pmb_im.controllers.controller("IntroCtrl",["$scope","$state","$cordovaGeolocation","$stateParams","$ionicPlatform","$ionicPopup","LocationsService","DBService",function(e,n,t,o,a,r,i,l){var c=l.initDB();c.info().then(console.log.bind(console)),e.geolocate=function(){var e=!1;ionic.Platform.ready(function(){var o=(ionic.Platform.device(),{timeout:3500,enableHighAccuracy:!0,maximumAge:6e4});t.getCurrentPosition(o).then(function(t){e=!0,i.save_initial_position(t),n.go("app.map")},function(e){n.go("app.map")})})},e.$on("$ionicView.enter",function(){e.geolocate()})}]),pmb_im.controllers.controller("MapController",["$scope","$sce","_","$cordovaFile","$cordovaGeolocation","$compile","$state","$stateParams","$ionicModal","$ionicPopup","leafletData","ConfigService","ContactService","PMBService","LocationsService","ContainerService","MapService","FaqService","CategoriesService","AuthService","UserService","DBService","$timeout","$location","ErrorService","$ionicSlideBoxDelegate","$ionicScrollDelegate","PopUpService","$ionicPlatform","ConnectivityService","$cordovaInAppBrowser","$interval","$cordovaKeyboard","NewsService",function(n,t,o,a,r,i,c,u,s,m,d,p,_,f,h,g,v,y,w,b,k,C,E,S,B,I,M,$,P,x,R,A,T,N){n.featureReports={},n.baseURL=p.baseURL,n.user_cached_image="",n.report_detail_id=null,n.one_value_popup=null,n.abuse_name=null,n.abuse_email=null,n.abuse_subject=null,n.abuse_message=null,n.actualSliderIndex=0,n.$on("$ionicView.beforeEnter",function(){C.initDB(),n.set_network_events(),n.find_me(),n.walkthrough()}),P.onHardwareBackButton(function(){e.stopPropagation(),n.hide_special_divs}),n.openWebsite=function(e){var n={location:"no",clearcache:"yes",toolbar:"no"};R.open(e,"_blank",n).then(function(e){})["catch"](function(e){})},n.set_network_events=function(){n.create_online_map(),n.addPinsLayer(),n.map.center={lat:-34.901113,lng:-56.164531,zoom:18}},n.create_online_map=function(){return null==n.map&&void(n.map={defaults:{tileLayer:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",minZoom:10,maxZoom:18,zoomControlPosition:"topleft"},markers:{},events:{map:{enable:["context"],logic:"emit"}}})},n.clickOnMenuIcon=function(){var e=document.getElementById("nav-icon-lines"),t=document.getElementById("expanded_menu");n.toggleClassOnElement(e,"open"),n.toggleClassOnElement(t,"open")};n.toggleClassOnElement=function(e,n){if(e&&n){var t=e.className,o=t.indexOf(n);o==-1?t+=" "+n:t=t.substr(0,o)+t.substr(o+n.length),e.className=t}},n.next=function(){I.next(),n.actualSliderIndex=I.currentIndex()},n.previous=function(){I.previous(),n.actualSliderIndex=I.currentIndex()},n.scrollMe=function(e){S.hash(e);var n=M.$getByHandle("content");n.anchorScroll()},n.goTo=function(e){S.hash("item"+e),M.anchorScroll()},n.set_active_option=function(e){return!1},n.hide_special_divs=function(){var e=document.getElementById("container_details");e&&(e.className="");var n=document.getElementById("navigation_back");n&&(n.className="hidden");var t=document.getElementById("navigation_menu");t&&(t.className="")},n.addMapControls=function(){return!1},n.startReportFromCrosshairs=function(){},n.addPinsLayer=function(){if(null!=n.jsonLayer)return!1;var e=p.baseURL;onEachFeature=function(e,t){e.properties&&t.on("click",function(e){n.selected_container=g.build(e.target.feature.properties),n.selected_container.setLatLng(e.target.feature.geometry.coordinates[1],e.target.feature.geometry.coordinates[0]);var t=document.getElementById("container_details");t.className="open";var o=document.getElementById("navigation_back");o.className="";var a=document.getElementById("navigation_menu");a.className="hidden",n.goToCenter(n.selected_container.lon,n.selected_container.lat)})},l=new L.LayerJSON({url:e+"/datauy/get_containers_json/{bbox}",locAsGeoJSON:!0,minShift:5,precision:10,onEachFeature:onEachFeature}),d.getMap().then(function(e){null!=n.jsonLayer&&e.removeLayer(n.jsonLayer),n.jsonLayer=l,e.addLayer(l)}),n.lastMarkerLayer=null,l.on("dataloaded",function(e){n.reports=e.data.features}),l.on("layeradd",function(t){t.layer.eachLayer(function(t){var o="/img/pin-container.svg";t.feature.properties.pin_url&&(o=t.feature.properties.pin_url);var a=L.icon({iconUrl:e+o,iconSize:[29,34],iconAnchor:[8,8],popupAnchor:[0,-8]});t.setIcon(a),void 0===n.featureReports[t.feature.properties.GID]&&(n.featureReports[t.feature.properties.GID]=t)})})},n.goToCenter=function(e,t){var o={timeout:3e3,enableHighAccuracy:!0};r.getCurrentPosition(o).then(function(o){var a=o.coords.latitude,r=o.coords.longitude;n.getRoad(a,r,t,e)},function(n){t-=6e-4,v.centerMapOnCoords(t,e,17)})},n.lastRoad=null,n.nav_back=function(){n.hide_special_divs(),null!=n.lastRoad&&(n.lastRoad.spliceWaypoints(0,2),d.getMap().then(function(e){e.removeControl(n.lastRoad),n.lastRoad=null}))},n.walkthrough=function(){if(null!=n.walkthrough_modal)return!1;var e=C.getDoneWalkthrough();e.then(function(e){null!=e.status&&"done"==e.status||n.openWalkThroughModal()})["catch"](function(e){n.openWalkThroughModal()})},n.walkthroughFromMenu=function(){n.closeMainMenu(),n.openWalkThroughModal()},n.openWalkThroughModal=function(){s.fromTemplateUrl("templates/walkthrough.html",{scope:n,hardwareBackButtonClose:!1,animation:"slide-in-up"}).then(function(e){n.walkthrough_modal=e,n.walkthrough_modal.show()})},n.finishWalkthrough=function(){n.walkthrough_modal.hide(),n.walkthrough_modal.remove(),C.saveDoneWalkthrough()},n.subject="Feedback",n.toggleGroup=function(e){n.isGroupShown(e)?n.shownGroup=null:n.shownGroup=e},n.isGroupShown=function(e){return n.shownGroup===e},n.openProgramas=function(){n.main_menu_modal.hide(),n.main_menu_modal.remove(),s.fromTemplateUrl("templates/programas.html",{scope:n,hardwareBackButtonClose:!0,animation:"none"}).then(function(e){n.item_modal=e,n.item_modal.show()})},n.clickTipoResiduo=function(e){n.scrollMe(e)},n.openClasificar=function(){n.main_menu_modal.hide(),n.main_menu_modal.remove(),s.fromTemplateUrl("templates/clasificar.html",{scope:n,hardwareBackButtonClose:!0,animation:"none"}).then(function(e){n.item_modal=e,n.item_modal.show()})},n.openAboutProyect=function(){n.main_menu_modal.hide(),n.main_menu_modal.remove(),s.fromTemplateUrl("templates/sobre_proyecto.html",{scope:n,hardwareBackButtonClose:!0,animation:"none"}).then(function(e){n.item_modal=e,n.item_modal.show()})},n.news=null,n.gotoLink=function(e){window.open(e,"_system")},n.openNews=function(){n.showDiv("menu-spinner"),N.all().then(function(e){n.news=e.data.items,null!=n.item_modal&&(n.item_modal.hide(),n.item_modal.remove()),n.hideDiv("menu-spinner"),n.main_menu_modal.hide(),n.main_menu_modal.remove(),s.fromTemplateUrl("templates/news.html",{scope:n,hardwareBackButtonClose:!0,animation:"none"}).then(function(e){n.item_modal=e,n.item_modal.show()})})},n.showDiv=function(e){var n=document.getElementById(e);n.classList.remove("hidden")},n.hideDiv=function(e,n){var t=document.getElementById(e);t.className=t.className+" hidden"},n.openContact=function(){n.subject="Feedback",null!=n.item_modal&&(n.item_modal.hide(),n.item_modal.remove()),n.main_menu_modal.hide(),n.main_menu_modal.remove(),s.fromTemplateUrl("templates/contact.html",{scope:n,hardwareBackButtonClose:!0,animation:"none"}).then(function(e){n.item_modal=e,n.item_modal.show()})},n.openContactSuccess=function(){n.item_modal.hide(),n.item_modal.remove(),s.fromTemplateUrl("templates/contact_success.html",{scope:n,hardwareBackButtonClose:!0,animation:"none"}).then(function(e){n.item_modal=e,n.item_modal.show()})},n.send_contact_request=function(){var e=document.getElementById("contact_nombre"),t=document.getElementById("contact_email"),o=document.getElementById("contact_select"),a=document.getElementById("contact_mensaje"),r=document.getElementById("contact_error_label");if(B.check_field(e,"notNull",r)&&B.check_field(t,"notNull",r)&&B.check_field(t,"email",r)&&B.check_field(o,"select",r)&&B.check_field(a,"notNull",r))_.send_contact(e.value,t.value,o[o.selectedIndex].value,a.value).then(function(e){B.http_data_response_is_successful_ajax(e)&&n.openContactSuccess()});else{var i=document.getElementById("contact_error");i.className="contact_error"}},n.openMainMenuFromItem=function(){n.item_modal.hide(),n.item_modal.remove(),s.fromTemplateUrl("templates/main_menu.html",{scope:n,hardwareBackButtonClose:!0,animation:"none"}).then(function(e){n.main_menu_modal=e,n.main_menu_modal.show()})},n.openMainMenu=function(){s.fromTemplateUrl("templates/main_menu.html",{scope:n,hardwareBackButtonClose:!0,animation:"none"}).then(function(e){n.main_menu_modal=e,n.main_menu_modal.show()})},n.closeMainMenu=function(){n.main_menu_modal.hide(),n.main_menu_modal.remove()},n.getRoad=function(e,t,o,a){d.getMap().then(function(r){r.closePopup();var i=L.icon({iconUrl:"./img/me.svg",iconSize:[29,34],iconAnchor:[8,8],popupAnchor:[0,-8]});null!=n.now_marker&&r.removeLayer(n.now_marker),n.now_marker=L.marker([e,t],{icon:i}).addTo(r),null!=n.lastRoad&&(n.lastRoad.spliceWaypoints(0,2),r.removeControl(n.lastRoad),n.lastRoad=null),n.lastRoad=L.Routing.control({waypoints:[L.latLng(e,t),L.latLng(o,a)],language:"es",router:L.Routing.mapbox("pk.eyJ1IjoibGl0b3hwZXJhbG9jYSIsImEiOiJjajNhdHUzbTMwMTQwMnFwaGRidmc2emZ5In0.dED4D4_LBjRc-sGa5zt5Yg"),createMarker:function(e,n,t){return null},lineOptions:{styles:[{color:"#4c4c4c",opacity:1,weight:5}]},fitSelectedRoutes:!1}).addTo(r),o-=8e-4,v.centerMapOnCoords(o,a,17)})},n.model=[],n.externalModel=[],n.selectedItems=[],n.preselectedSearchItems=[],n.clickedValueModel="",n.removedValueModel="",n.itemsRemoved=function(e){n.removedValueModel=e},n.user_options=function(){var e=document.getElementById("user-options-menu");if("block"==e.style.display)e.style.display="none";else{var t=k.name;null==t?n.show_anonymous_menu():n.show_user_menu()}},n.show_anonymous_menu=function(){var e=document.getElementById("user-options-menu"),t="<div id='auth_options'><div class='nonauth-link' ng-click='show_login_modal()'>Iniciar sesión</div>";t+="<div class='nonauth-link' ng-click='show_sign_up_modal()'>Registrarse</div></div>",e.innerHTML=t,i(e)(n),e.style.height="120px",e.style.width="150px",e.style.display="block"},n.show_user_menu=function(){var e=document.getElementById("user-options-menu"),t=k.name+"<div id='auth_options'><div class='user-logged-link' ng-click='show_edit_profile_modal()'>Mi perfil</div>";t+="<div class='user-logged-link' ng-click='list_offline_reports_menu()'>Reportes pendientes</div>",t+="<div class='user-logged-link' ng-click='sign_out()'>Cerrar sesión</div></div>",e.innerHTML=t,i(e)(n),e.style.height="160px",e.style.width="200px",e.style.display="block"},n.create_field_array=function(e,n,t){var o=new Array;return o.name=e,o.type=n,o.value=t,o},n.sign_in=function(e,t){if(x.isOnline()){document.getElementById("spinner-inside-modal").style.display="block";var o=new Array;o.push(n.create_field_array("Email","email",e)),o.push(n.create_field_array("Contraseña","notNull",t)),B.check_fields(o,"error_container")?b.sign_in(t,e).then(function(o){B.http_response_is_successful(o,"error_container")?(k.save_user_data(o.data.name,e,t,o.data.identity_document,o.data.phone,o.data.picture_url),C.saveUser(o.data.name,e,t,o.data.identity_document,o.data.phone,o.data.picture_url),document.getElementById("spinner-inside-modal").style.display="none",n.close_login_modal(),n.set_user_picture(1)):document.getElementById("spinner-inside-modal").style.display="none"},function(e){document.getElementById("spinner-inside-modal").style.display="none",B.show_error_message("error_container",e.statusText)}):document.getElementById("spinner-inside-modal").style.display="none"}else $.show_alert("Sin conexión a internet","Para iniciar sesión debe estar conectado a internet")},n.sign_in_ajax=function(e,t){b.sign_in(t,e).then(function(o){return B.http_response_is_successful_ajax(o)?(k.save_user_data(o.data.name,e,t,o.data.identity_document,o.data.phone,o.data.picture_url),C.saveUser(o.data.name,e,t,o.data.identity_document,o.data.phone,o.data.picture_url),n.set_user_picture(1),1):0},function(e){return 0})},n.sign_out=function(){k.erase_user_data(),C.eraseUser(),document.getElementById("spinner").style.display="none",n.set_user_picture(0),document.getElementById("user-options-menu").style.display="none"},n.check_user_logged=function(){return!1},n.set_offline_user=function(){},n.set_user_picture=function(e){},n.search_street=function(){n.hide_special_divs(),document.getElementById("search-textbox").parentNode.click()},n.find_me=function(){n.set_active_option("button-find-me"),n.hide_special_divs();var e={timeout:3e3,enableHighAccuracy:!0};r.getCurrentPosition(e).then(function(e){var t=18,o=L.icon({iconUrl:"./img/me.svg",iconSize:[29,34],iconAnchor:[8,8],popupAnchor:[0,-8]});d.getMap().then(function(a){null!=n.now_marker&&a.removeLayer(n.now_marker),n.now_marker=L.marker([e.coords.latitude,e.coords.longitude],{icon:o}).addTo(a),v.centerMapOnCoords(e.coords.latitude,e.coords.longitude,t)})},function(e){})}}]),pmb_im.controllers.controller("PMBCtrl",["$scope","$state","leafletData","PMBService","ContainerService","locationAPI","MapService","_","Loader","LocationsService",function(e,n,t,o,a,r,i,l,c,u){e.reportButton={text:"Reportar",state:"unConfirmed"},e.$on("$ionicView.afterEnter",function(){document.getElementById("spinner").style.display="none";t.getMap();""!=u.initial_lat?i.centerMapOnCoords(u.initial_lat,u.initial_lng,18):i.centerMapOnCoords(-34.901113,-56.164531,16)}),e.searchMode="calle.lugar",e.location={calle:null,esquina:null,lugar:null};var s={tipo:null,pathParams:[]};e.$on("$stateChangeSuccess",function(){e.ionAutocompleteElement=angular.element(document.getElementsByClassName("ion-autocomplete")),e.ionAutocompleteElement.bind("touchend click focus",e.onClick)}),e.initReport=function(){var n,o=L.icon({iconUrl:"img/pin@x2.png",iconSize:[70,110],iconAnchor:[-18,55]});"unConfirmed"==e.reportButton.state&&(e.reportButton.text="Confirmar",e.reportButton.state="about2Confirm",t.getMap().then(function(t){n=new L.marker(t.getCenter(),{icon:o,clickable:!1}).addTo(t),ReportService._new(),ReportService.current.setLatLng(t.getCenter()),e.ionAutocompleteElement=angular.element(document.getElementsByClassName("ion-autocomplete")),e.ionAutocompleteElement.bind("touchend click focus",e.onClick)}))},e.isNumeric=function(e){return!isNaN(parseFloat(e))&&isFinite(e)},e.searchLocation=function(n){var t;if(n&&n.length>=2){if("calle.lugar"==e.searchMode)t=r.searchLocationByStr(n);else{if(e.isNumeric(n.trim())){var o=[],a={descTipo:"NUMERO",nombre:n,codigo:n};return o[0]=a,o}t=r.searchEsquinaByStr({calle:e.selectedItem.codigo,esquina:n})}return t}return[]},e.onClick=function(){e.ionAutocompleteElement.controller("ionAutocomplete").showModal()},e.itemsClicked=function(n){if(e.clickedValueModel=n,e.selectedItem=n.item,e.ionAutocompleteElementSearch=angular.element(document.getElementsByClassName("ion-autocomplete-search")),"esquina.numero"==e.searchMode){s.pathParams=[],e.location.esquina=e.selectedItem,s.pathParams.push(e.location.calle.codigo),s.pathParams.push(e.location.esquina.codigo);var t="";e.isNumeric(e.selectedItem.nombre)?s.tipo="DIRECCION":(s.tipo="ESQUINA",t="esquina"),r.getLocationGeom(s).then(function(n){i.goToPlace(angular.extend({nombre:e.location.calle.nombre+" "+t+" "+e.selectedItem.nombre,geom:n.geoJSON},n),e),e.searchMode="calle.lugar",e.ionAutocompleteElementSearch.attr("placeholder","Buscar calle"),e.externalModel=[]})}else e.location.calle=e.selectedItem,e.searchMode="esquina.numero",e.ionAutocompleteElementSearch.attr("placeholder","Esquina o número"),e.ionAutocompleteElement.controller("ionAutocomplete").showModal(),e.preselectedSearchItems=[]},e.itemsCanceled=function(n){var t=parseInt(n.searchQuery);Number.isInteger(t)&&(s.tipo="DIRECCION",s.pathParams.push(e.location.calle.codigo),s.pathParams.push(t),r.getLocationGeom(s).then(function(n){i.goToPlace(angular.extend({nombre:e.selectedItem.nombre+" "+t},n),e),e.searchMode="calle.lugar"},function(n){c.showAlert("Error","No existe esa direccion").then(function(n){e.ionAutocompleteElement.controller("ionAutocomplete").showModal()})}))}}]),pmb_im.services.factory("AuthService",["$http","$cordovaFileTransfer","ConfigService",function(e,n,t){var o=t.baseURL+"/auth/ajax/";return{sign_in:function(n,t){return e.get(o+"sign_in",{params:{password_sign_in:n,email:t}})},sign_out:function(n,t){return e.get(o+"sign_out",{params:{password_sign_in:n,email:t}})},create_user:function(n,t,a,r,i){return e.get(o+"create_user",{params:{form_email:n,name:t,password_register:a,identity_document:r,phone:i}})},change_password:function(n,t,a,r,i){return e.get(o+"create_user",{params:{login_email:n,name:t,password_register:a,identity_document:r,phone:i}})},edit_user:function(t,a,r,i,l,c,u){if(null!=u&&""!=u){var s={fileKey:"photo",params:{email:t,password_sign_in:a,name:r,new_email:i,identity_document:l,phone:c}},m=!0;return n.upload(o+"edit_user",u,s,m)}return e.get(o+"edit_user",{params:{email:t,password_sign_in:a,name:r,new_email:i,identity_document:l,phone:c}})}}}]),pmb_im.services.factory("CategoriesService",["$http","LocationsService","ConfigService","DBService",function(e,n,t,o){var a=t.baseURL+"/report/new/ajax";return{all:function(){return e.get(a,{params:{lat:n.new_report_lat,lon:n.new_report_lng,format:"json"}})},getCachedCategories:function(){return o.getCategories()}}}]),pmb_im.services.factory("ConfigService",["$http",function(e){var n={};return n.baseURL="http://dondereciclo.development.datauy.org",n}]),pmb_im.services.factory("ConnectivityService",["$cordovaNetwork",function(e){return{isOnline:function(){return ionic.Platform.isWebView()?e.isOnline():navigator.onLine},isOffline:function(){return ionic.Platform.isWebView()?!e.isOnline():!navigator.onLine}}}]),pmb_im.services.factory("ContactService",["$http","ConfigService",function(e,n){var t=n.baseURL+"/datauy/contact/";return{send_contact:function(n,o,a,r){return e.get(t+n+"/"+o+"/"+a+"/"+r,{params:{}})}}}]),pmb_im.services.factory("ContainerService",["$http","leafletData","ConfigService",function(e,n,t){function o(e){angular.extend(this,e)}var a=t.baseURL+"/report/ajax/";return o.getById=function(n){var t=a+n;return e.get(t).then(function(e){return e})},o._default=function(){var e={lat:0,lon:0,title:null,detail:null,may_show_name:1,category:null,phone:null,pc:"",file:null,name:null,email:null,submit_sign_in:1,password_sign_in:null,remember_me:1};return new o(e)},o._all=[],o.current={},o._new=function(){return o._default()},o.build=function(e){return new o(e)},o.prototype.setLatLng=function(e,n){this.lat=e,this.lon=n},o}]),pmb_im.services.factory("DBService",["$q",function(e){function n(e,n,t,o,r,i){var l={_id:"user-logged",name:e,email:n,password:t,identity_document:o,phone:r,picture_url:i};a().then(function(e){return l._rev=e._rev,f.put(l)})["catch"](function(e){return f.put(l)})}function t(){var e={_id:"done-walkthrough",status:"done"};return f.put(e)}function o(){return f.get("done-walkthrough")}function a(){return f.get("user-logged")}function r(){f.get("user-logged").then(function(e){return f.remove(e)})}function i(){return f=new PouchDB("pmb_local_db")}function l(e){var n=new Date,t="report_"+n.getFullYear()+(n.getMonth()+1)+n.getDate()+n.getMilliseconds();return e._id=t,f.put(e)}function c(e){return f.put(e)}function u(){return f.get("categories-list")}function s(e){u().then(function(n){return e._rev=n._rev,f.put(e)})["catch"](function(n){return e._id="categories-list",f.put(e)})}function m(e){return f.get(e)}function d(){return f.allDocs({include_docs:!0,attachments:!1,startkey:"report_",endkey:"report_￿"})}function p(e){f.get(e).then(function(e){return f.remove(e)})}function _(e){return f.remove(e)}var f;return{initDB:i,saveUser:n,getUser:a,eraseUser:r,saveReport:l,getReport:m,getAllReports:d,updateReport:c,deleteReport:p,deleteGivenReport:_,getCategories:u,saveCategories:s,getDoneWalkthrough:o,saveDoneWalkthrough:t}}]),pmb_im.services.factory("ErrorService",["$http","$ionicPopup","ValidationService",function(e,n,t){return{http_response_is_successful:function(e,n){var t=document.getElementById(n);return 0==e.data.result?(t.innerHTML="<h3>"+e.data.message+"</h3>",t.style.display="block",!1):(t.style.display="none",!0)},http_response_is_successful_ajax:function(e){return 0!=e.data.result},http_response_is_successful_popup:function(e){if(0==e.data.result){var t=n.alert({title:"Error",template:e.data.message});return t.then(function(e){return!1}),!1}return!0},http_data_response_is_successful:function(e,n){var t=document.getElementById(n);return 0==e.result?(t.innerHTML="<h3>"+e.message+"</h3>",t.style.display="block",!1):(t.style.display="none",!0)},http_data_response_is_successful_ajax:function(e){return 0!=e.result},show_error_message:function(e,n){var t=document.getElementById(e);return t.innerHTML="<h3>"+n+"</h3>",t.style.display="block",!1},show_error_message_popup:function(e){var t=n.alert({title:"Error",template:e});return t.then(function(e){return!1}),!1},check_fields:function(e,n){var o="";if(e.forEach(function(e){"notNull"==e.type&&(t.validate_not_empty(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no puede estar vacío.</h3>')),"email"==e.type&&(t.validate_email(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no es una dirección de correo válida.</h3>')),"iddoc_uy"==e.type&&(t.validate_iddoc_uy(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no es una cédula uruguaya válida.</h3>')),"two_words"==e.type&&(t.validate_two_words(e.value)||(o=o+'<h3>- El campo "'+e.name+'" debe contener al menos dos palabras.</h3>'))}),""==o)return!0;var a=document.getElementById(n);return a.innerHTML=o,a.style.display="block",!1},check_field:function(e,n,o){var a=!0;return"notNull"==n&&(t.validate_not_empty(e.value)||(a=!1,o.innerHTML="Debes completar<br/>el campo "+e.name)),"email"==n&&(t.validate_email(e.value)||(a=!1,o.innerHTML="El campo "+e.name+"<br/>no es un email válido")),"iddoc_uy"==n&&(t.validate_iddoc_uy(e.value)||(a=!1)),"two_words"==n&&(t.validate_two_words(e.value)||(a=!1)),"textarea"==n&&(t.validate_not_empty(e.innerHTML)||(a=!1,o.innerHTML="Debes completar<br/>el campo "+e.name)),"select"==n&&(t.validate_not_minusone(e[e.selectedIndex].value)||(a=!1,o.innerHTML="Debes elegir valor<br/>para el campo "+e.name)),a?e.style.borderColor="#979797":e.style.borderColor="red",a}}}]),pmb_im.services.factory("FaqService",["$http","ConfigService",function(e,n){var t=n.baseURL+"/faq";return{all:function(){return e.get(t,{params:{ajax:"1"}})}}}]),pmb_im.services.factory("Loader",["$ionicLoading","$timeout","$ionicPopup",function(e,n,t){var o={showLoading:function(n){n=n||"Loading...",e.show({template:n})},hideLoading:function(){e.hide()},toggleLoadingWithMessage:function(e,t){var o=this;o.showLoading(e),n(function(){o.hideLoading()},t||3e3)},confirmPopup:function(e,n){var o=t.confirm({title:e,template:n});return o},showAlert:function(e,n){var o=t.alert({title:e,template:n});return o}};return o}]),pmb_im.services.factory("LocationsService",[function(){var e={};return e.initial_lat="",e.initial_lng="",e.new_report_lat="",e.new_report_lng="",e.save_initial_position=function(n){e.initial_lat=n.coords.latitude,e.initial_lng=n.coords.longitude},e.save_new_report_position=function(n,t){e.new_report_lat=n,e.new_report_lng=t},e.savedLocations=[],e}]),pmb_im.services.factory("MapService",["leafletData","$compile",function(e,n){proj4.defs("EPSG:32721","+proj=utm +zone=21 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs");var t={};return t.goToPlace=function(n,t){var o={properties:{nombre:n.nombre},crs:{type:"name",properties:{name:"urn:ogc:def:crs:EPSG::32721"}}};o=angular.extend(o,n.geom),e.getMap().then(function(e){var n;L.Proj.geoJson(o,{pointToLayer:function(e,t){return n=t,L.marker(t)}});e.setView(n,18)})},t.centerMapOnCoords=function(n,t,o){e.getMap().then(function(e){e.setView(new L.LatLng(n,t),o)})},t}]),pmb_im.services.factory("NewsService",["$http","ConfigService",function(e,n){var t=n.baseURL+"/datauy/news";return{all:function(){return e.get(t,{params:{}})}}}]),pmb_im.services.factory("PMBService",["$http","leafletData","$cordovaFileTransfer","ConfigService",function(e,n,t,o){var a=o.baseURL,r={report:function(n){if(n.file){var o={fileKey:"photo",fileName:"image.jpeg",chunkedMode:!1,mimeType:"image/jpeg",params:n};o.headers={Connection:"Close"};var r=!0;return t.upload(a+"/report/new/mobile",n.file,o,r)}return e.get(a+"/report/new/mobile",{params:n})},subscribe:function(n,t){return e.get(a+"/alert/subscribe_ajax",{params:{rznvy:n,id:t,type:"updates"}})},abuse:function(n,t,o,r,i){return e.get(a+"/contact/submit_ajax",{params:{em:n,id:t,name:o,subject:r,message:i}})},hide:function(n){var t="/report/delete_ajax/"+n;return e.get(a+t,{params:{}})},comment:function(n,t,o,r,i,l,c){return e.get(a+"/report/update_ajax",{params:{submit_update:1,id:n,may_show_name:i,add_alert:l,fixed:c,update:t,name:o,form_rznvy:r}})}};return r}]),pmb_im.services.factory("PopUpService",["$ionicPopup","ValidationService",function(e,n){return{show_alert:function(n,t){var o=e.alert({title:n,template:t});return o.then(function(e){return!0}),!0},confirmPopup:function(n,t){var o=e.confirm({title:n,template:t});return o},askForOneValuePopUp:function(t,o,a,r,i){$scope=t;var l=e.show({template:r+': <input type="text" id="one_value_popup"><div id="error_container_inside"></div>',title:o,subTitle:a,scope:$scope,buttons:[{text:"Cancelar"},{text:"<b>Enviar</b>",type:"button-positive",onTap:function(e){var t="",o=document.getElementById("one_value_popup").value;if("notNull"==i&&(n.validate_not_empty(o)||(t=t+'<h3>- El campo "'+r+'" no puede estar vacío.</h3>')),"email"==i&&(n.validate_email(o)||(t=t+'<h3>- El campo "'+r+'" no es una dirección de correo válida.</h3>')),"iddoc_uy"==i&&(n.validate_iddoc_uy(o)||(t=t+'<h3>- El campo "'+r+'" no es una cédula uruguaya válida.</h3>')),"two_words"==i&&(n.validate_two_words(o)||(t=t+'<h3>- El campo "'+r+'" debe contener al menos dos palabras.</h3>')),""==t)return o;var a=document.getElementById("error_container_inside");a.innerHTML=t,a.style.display="block",e.preventDefault()}}]});return l}}}]),pmb_im.services.factory("locationAPI",["$http","$q","ApiImEndpoint","ApiDataEndpoint",function(e,n,t,o){var a="ubicacionesRestProd",r={};return r.searchLocationByStr=function(n){return e.get(t.url+"/"+a+"/calles",{method:"GET",params:{nombre:n}})},r.searchEsquinaByStr=function(n){return e.get(t.url+"/"+a+"/cruces/"+n.calle+"/",{params:{nombre:n.esquina}})},r.getLocationGeom=function(n){for(var o=t.url+"/"+a+r.getParamPathByTipo(n.tipo),i=0;i<n.pathParams.length;i++)o+="/"+n.pathParams[i];return e.get(o).then(function(e){return e.data})},r.getParamPathByTipo=function(e){var n={ESQUINA:"/esquina",DIRECCION:"/direccion"};return n[e]},r}]),pmb_im.services.factory("_",[function(){return window._}]),pmb_im.services.factory("UserService",["$http",function(e){var n={};return n.name=null,n.email=null,n.password=null,n.identity_document=null,n.phone="",n.picture_url="url(./img/icon-user-anonymous.png)",n.save_user_data=function(e,t,o,a,r,i){n.name=e,n.email=t,n.password=o,n.identity_document=a,n.phone=r,n.picture_url=i},n.erase_user_data=function(){n.name=null,n.email=null,n.password=null,n.identity_document=null,n.phone=null,n.picture_url=null},n.get_user_data=function(){},n.add_photo=function(e){n.picture_url=e},n.isLogged=function(){return null!=n.name&&""!=n.name},n}]),pmb_im.services.factory("ValidationService",["$http","$ionicPopup",function(e,n){return{validate_not_minusone:function(e){return e!=-1},validate_not_empty:function(e){return null!=e&&"undefined"!=e&&""!=e},validate_two_words:function(e){if(null!=e&&"undefined"!=e&&""!=e){var n=e.split(" ").filter(function(e){return""!==e});return n.length>1}return!1},validate_email:function(e){if(null!=e&&"undefined"!=e&&""!=e){var n=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return n.test(e)}return!1},validate_iddoc_uy:function(e){if(null!=e&&"undefined"!=e&&""!=e){e=e.replace(/\D/g,"");var n=e[e.length-1],t=0,o=0;if(e.length<=6)for(o=e.length;o<7;o++)e="0"+e;for(o=0;o<7;o++)t+=parseInt("2987634"[o])*parseInt(e[o])%10;var a;return a=t%10===0?0:10-t%10,n==a}return!1}}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
