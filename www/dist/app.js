window.VERSION = "0.0.3";var pmb_im={controllers:angular.module("pmb_im.controllers",[]),services:angular.module("pmb_im.services",[])};pmb_im.app=angular.module("pmb_im",["ionic","ionic.wizard","ion-autocomplete","leaflet-directive","pmb_im.controllers","pmb_im.services","ngCordova","ionic-cache-src"]).constant("ApiImEndpoint",{url:"http://www.montevideo.gub.uy"}).constant("ApiDataEndpoint",{url:"/data"}).run(["$ionicPlatform","$rootScope","$cordovaKeyboard",function(e,t,n){t.VERSION=window.VERSION,e.ready(function(){window.cordova&&window.cordova.plugins.Keyboard&&cordova.plugins.Keyboard.hideKeyboardAccessoryBar(!0),ionic.Platform.isFullScreen=!1,window.StatusBar&&StatusBar.styleDefault()})}]).config(["$stateProvider","$urlRouterProvider","$compileProvider","$ionicConfigProvider",function(e,t,n,o){n.debugInfoEnabled(!1),e.state("app",{cache:!1,url:"/app","abstract":!0,templateUrl:"templates/menu.html",controller:"MapController"}).state("app.map",{cache:!1,url:"/map/",views:{menuContent:{templateUrl:"templates/map.html",controller:"PMBCtrl"}}}).state("app.intro",{cache:!1,url:"/intro",views:{menuContent:{templateUrl:"templates/intro.html",controller:"IntroCtrl"}}}),t.otherwise("/app/intro")}]),pmb_im.controllers.controller("AutoCompleteCtrl",["$scope","leafletData","locationAPI",function(e,t,n){e.ionAutocompleteElement=angular.element(document.getElementsByClassName("ion-autocomplete")),e.ionAutocompleteElement.bind("touchend click focus",e.onClick),e.onClick=function(){e.ionAutocompleteElement.controller("ionAutocomplete").showModal()},e.searchLocation=function(e){if(e)return n.searchLocationByStr(e)}}]),pmb_im.controllers.controller("IntroCtrl",["$scope","$state","$cordovaGeolocation","$stateParams","$ionicPlatform","$ionicPopup","LocationsService","DBService",function(e,t,n,o,a,r,i,l){var c=l.initDB();c.info().then(console.log.bind(console)),e.geolocate=function(){var e=!1;ionic.Platform.ready(function(){var o=(ionic.Platform.device(),{timeout:3500,enableHighAccuracy:!0,maximumAge:6e4});n.getCurrentPosition(o).then(function(n){e=!0,i.save_initial_position(n),t.go("app.map")},function(e){t.go("app.map")})})},e.$on("$ionicView.enter",function(){e.geolocate()})}]),pmb_im.controllers.controller("MapController",["$scope","$sce","_","$cordovaFile","$cordovaGeolocation","$compile","$state","$stateParams","$ionicModal","$ionicPopup","leafletData","ConfigService","ContactService","PMBService","LocationsService","ContainerService","MapService","FaqService","CategoriesService","AuthService","UserService","DBService","$timeout","$location","ErrorService","$ionicSlideBoxDelegate","$ionicScrollDelegate","PopUpService","$ionicPlatform","ConnectivityService","$cordovaInAppBrowser","$interval","$cordovaKeyboard",function(t,n,o,a,r,i,c,u,s,m,d,p,_,f,g,h,v,y,b,w,E,k,C,S,I,B,M,$,P,x,R,A,T){t.featureReports={},t.baseURL=p.baseURL,t.user_cached_image="",t.report_detail_id=null,t.one_value_popup=null,t.abuse_name=null,t.abuse_email=null,t.abuse_subject=null,t.abuse_message=null,t.actualSliderIndex=0,t.$on("$ionicView.beforeEnter",function(){k.initDB(),t.set_network_events(),t.find_me(),t.walkthrough()}),P.onHardwareBackButton(function(){e.stopPropagation(),t.hide_special_divs}),t.openWebsite=function(e){var t={location:"no",clearcache:"yes",toolbar:"no"};R.open(e,"_blank",t).then(function(e){})["catch"](function(e){})},t.set_network_events=function(){t.create_online_map(),t.addPinsLayer(),t.map.center={lat:-34.901113,lng:-56.164531,zoom:18}},t.create_online_map=function(){return null==t.map&&void(t.map={defaults:{tileLayer:"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png",minZoom:10,maxZoom:18,zoomControlPosition:"topleft"},markers:{},events:{map:{enable:["context"],logic:"emit"}}})},t.clickOnMenuIcon=function(){var e=document.getElementById("nav-icon-lines"),n=document.getElementById("expanded_menu");t.toggleClassOnElement(e,"open"),t.toggleClassOnElement(n,"open")};t.toggleClassOnElement=function(e,t){if(e&&t){var n=e.className,o=n.indexOf(t);o==-1?n+=" "+t:n=n.substr(0,o)+n.substr(o+t.length),e.className=n}},t.next=function(){B.next(),t.actualSliderIndex=B.currentIndex()},t.previous=function(){B.previous(),t.actualSliderIndex=B.currentIndex()},t.scrollMe=function(e){S.hash(e);var t=M.$getByHandle("content");t.anchorScroll()},t.set_active_option=function(e){return!1},t.hide_special_divs=function(){var e=document.getElementById("container_details");e&&(e.className="");var t=document.getElementById("navigation_back");t&&(t.className="hidden");var n=document.getElementById("navigation_menu");n&&(n.className="")},t.addMapControls=function(){return!1},t.startReportFromCrosshairs=function(){},t.addPinsLayer=function(){if(null!=t.jsonLayer)return!1;var e=p.baseURL;onEachFeature=function(e,n){e.properties&&n.on("click",function(e){t.selected_container=h.build(e.target.feature.properties),t.selected_container.setLatLng(e.target.feature.geometry.coordinates[1],e.target.feature.geometry.coordinates[0]);var n=document.getElementById("container_details");n.className="open";var o=document.getElementById("navigation_back");o.className="";var a=document.getElementById("navigation_menu");a.className="hidden",t.goToCenter(t.selected_container.lon,t.selected_container.lat)})},l=new L.LayerJSON({url:e+"/datauy/get_containers_json/{bbox}",locAsGeoJSON:!0,minShift:5,precision:10,onEachFeature:onEachFeature}),d.getMap().then(function(e){null!=t.jsonLayer&&e.removeLayer(t.jsonLayer),t.jsonLayer=l,e.addLayer(l)}),t.lastMarkerLayer=null,l.on("dataloaded",function(e){t.reports=e.data.features}),l.on("layeradd",function(n){n.layer.eachLayer(function(n){var o="/img/pin-container.svg";n.feature.properties.pin_url&&(o=n.feature.properties.pin_url);var a=L.icon({iconUrl:e+o,iconSize:[29,34],iconAnchor:[8,8],popupAnchor:[0,-8]});n.setIcon(a),void 0===t.featureReports[n.feature.properties.GID]&&(t.featureReports[n.feature.properties.GID]=n)})})},t.goToCenter=function(e,n){var o={timeout:5e3,enableHighAccuracy:!0};r.getCurrentPosition(o).then(function(o){var a=o.coords.latitude,r=o.coords.longitude;t.getRoad(a,r,n,e)},function(t){n-=6e-4,v.centerMapOnCoords(n,e,17)})},t.lastRoad=null,t.nav_back=function(){t.hide_special_divs(),null!=t.lastRoad&&(t.lastRoad.spliceWaypoints(0,2),d.getMap().then(function(e){e.removeControl(t.lastRoad),t.lastRoad=null}))},t.walkthrough=function(){if(null!=t.walkthrough_modal)return!1;var e=k.getDoneWalkthrough();e.then(function(e){null!=e.status&&"done"==e.status||t.openWalkThroughModal()})["catch"](function(e){t.openWalkThroughModal()})},t.walkthroughFromMenu=function(){t.closeMainMenu(),t.openWalkThroughModal()},t.openWalkThroughModal=function(){s.fromTemplateUrl("templates/walkthrough.html",{scope:t,hardwareBackButtonClose:!1,animation:"slide-in-up"}).then(function(e){t.walkthrough_modal=e,t.walkthrough_modal.show()})},t.finishWalkthrough=function(){t.walkthrough_modal.hide(),t.walkthrough_modal.remove(),k.saveDoneWalkthrough()},t.openContact=function(){null!=t.item_modal&&(t.item_modal.hide(),t.item_modal.remove()),t.main_menu_modal.hide(),t.main_menu_modal.remove(),s.fromTemplateUrl("templates/contact.html",{scope:t,hardwareBackButtonClose:!0,animation:"none",focusFirstInput:!0}).then(function(e){t.item_modal=e,t.item_modal.show()})},t.openContactSuccess=function(){t.item_modal.hide(),t.item_modal.remove(),s.fromTemplateUrl("templates/contact_success.html",{scope:t,hardwareBackButtonClose:!0,animation:"none"}).then(function(e){t.item_modal=e,t.item_modal.show()})},t.send_contact_request=function(){var e=document.getElementById("contact_nombre"),n=document.getElementById("contact_email"),o=document.getElementById("contact_select"),a=document.getElementById("contact_mensaje"),r=document.getElementById("contact_error_label");if(I.check_field(e,"notNull",r)&&I.check_field(n,"notNull",r)&&I.check_field(n,"email",r)&&I.check_field(a,"notNull",r))_.send_contact(e.value,n.value,o[o.selectedIndex].value,a.value).then(function(e){I.http_data_response_is_successful_ajax(e)&&t.openContactSuccess()});else{var i=document.getElementById("contact_error");i.className="contact_error"}},t.openMainMenuFromItem=function(){t.item_modal.hide(),t.item_modal.remove(),s.fromTemplateUrl("templates/main_menu.html",{scope:t,hardwareBackButtonClose:!0,animation:"none"}).then(function(e){t.main_menu_modal=e,t.main_menu_modal.show()})},t.openMainMenu=function(){s.fromTemplateUrl("templates/main_menu.html",{scope:t,hardwareBackButtonClose:!0,animation:"none"}).then(function(e){t.main_menu_modal=e,t.main_menu_modal.show()})},t.closeMainMenu=function(){t.main_menu_modal.hide(),t.main_menu_modal.remove()},t.getRoad=function(e,n,o,a){d.getMap().then(function(r){r.closePopup();var i=L.icon({iconUrl:"./img/me.svg",iconSize:[29,34],iconAnchor:[8,8],popupAnchor:[0,-8]});null!=t.now_marker&&r.removeLayer(t.now_marker),t.now_marker=L.marker([e,n],{icon:i}).addTo(r),null!=t.lastRoad&&(t.lastRoad.spliceWaypoints(0,2),r.removeControl(t.lastRoad),t.lastRoad=null),t.lastRoad=L.Routing.control({waypoints:[L.latLng(e,n),L.latLng(o,a)],language:"es",router:L.Routing.mapbox("pk.eyJ1IjoibGl0b3hwZXJhbG9jYSIsImEiOiJjajNhdHUzbTMwMTQwMnFwaGRidmc2emZ5In0.dED4D4_LBjRc-sGa5zt5Yg"),createMarker:function(e,t,n){return null},lineOptions:{styles:[{color:"#4c4c4c",opacity:1,weight:5}]},fitSelectedRoutes:!1}).addTo(r),o-=8e-4,v.centerMapOnCoords(o,a,17)})},t.model=[],t.externalModel=[],t.selectedItems=[],t.preselectedSearchItems=[],t.clickedValueModel="",t.removedValueModel="",t.itemsRemoved=function(e){t.removedValueModel=e},t.user_options=function(){var e=document.getElementById("user-options-menu");if("block"==e.style.display)e.style.display="none";else{var n=E.name;null==n?t.show_anonymous_menu():t.show_user_menu()}},t.show_anonymous_menu=function(){var e=document.getElementById("user-options-menu"),n="<div id='auth_options'><div class='nonauth-link' ng-click='show_login_modal()'>Iniciar sesi√≥n</div>";n+="<div class='nonauth-link' ng-click='show_sign_up_modal()'>Registrarse</div></div>",e.innerHTML=n,i(e)(t),e.style.height="120px",e.style.width="150px",e.style.display="block"},t.show_user_menu=function(){var e=document.getElementById("user-options-menu"),n=E.name+"<div id='auth_options'><div class='user-logged-link' ng-click='show_edit_profile_modal()'>Mi perfil</div>";n+="<div class='user-logged-link' ng-click='list_offline_reports_menu()'>Reportes pendientes</div>",n+="<div class='user-logged-link' ng-click='sign_out()'>Cerrar sesi√≥n</div></div>",e.innerHTML=n,i(e)(t),e.style.height="160px",e.style.width="200px",e.style.display="block"},t.create_field_array=function(e,t,n){var o=new Array;return o.name=e,o.type=t,o.value=n,o},t.sign_in=function(e,n){if(x.isOnline()){document.getElementById("spinner-inside-modal").style.display="block";var o=new Array;o.push(t.create_field_array("Email","email",e)),o.push(t.create_field_array("Contrase√±a","notNull",n)),I.check_fields(o,"error_container")?w.sign_in(n,e).then(function(o){I.http_response_is_successful(o,"error_container")?(E.save_user_data(o.data.name,e,n,o.data.identity_document,o.data.phone,o.data.picture_url),k.saveUser(o.data.name,e,n,o.data.identity_document,o.data.phone,o.data.picture_url),document.getElementById("spinner-inside-modal").style.display="none",t.close_login_modal(),t.set_user_picture(1)):document.getElementById("spinner-inside-modal").style.display="none"},function(e){document.getElementById("spinner-inside-modal").style.display="none",I.show_error_message("error_container",e.statusText)}):document.getElementById("spinner-inside-modal").style.display="none"}else $.show_alert("Sin conexi√≥n a internet","Para iniciar sesi√≥n debe estar conectado a internet")},t.sign_in_ajax=function(e,n){w.sign_in(n,e).then(function(o){return I.http_response_is_successful_ajax(o)?(E.save_user_data(o.data.name,e,n,o.data.identity_document,o.data.phone,o.data.picture_url),k.saveUser(o.data.name,e,n,o.data.identity_document,o.data.phone,o.data.picture_url),t.set_user_picture(1),1):0},function(e){return 0})},t.sign_out=function(){E.erase_user_data(),k.eraseUser(),document.getElementById("spinner").style.display="none",t.set_user_picture(0),document.getElementById("user-options-menu").style.display="none"},t.check_user_logged=function(){return!1},t.set_offline_user=function(){},t.set_user_picture=function(e){},t.search_street=function(){t.hide_special_divs(),document.getElementById("search-textbox").parentNode.click()},t.find_me=function(){t.set_active_option("button-find-me"),t.hide_special_divs();var e={timeout:1e4,enableHighAccuracy:!0};r.getCurrentPosition(e).then(function(e){var n=18,o=L.icon({iconUrl:"./img/me.svg",iconSize:[29,34],iconAnchor:[8,8],popupAnchor:[0,-8]});d.getMap().then(function(a){null!=t.now_marker&&a.removeLayer(t.now_marker),t.now_marker=L.marker([e.coords.latitude,e.coords.longitude],{icon:o}).addTo(a),v.centerMapOnCoords(e.coords.latitude,e.coords.longitude,n)})},function(e){})}}]),pmb_im.controllers.controller("PMBCtrl",["$scope","$state","leafletData","PMBService","ContainerService","locationAPI","MapService","_","Loader","LocationsService",function(e,t,n,o,a,r,i,l,c,u){e.reportButton={text:"Reportar",state:"unConfirmed"},e.$on("$ionicView.afterEnter",function(){document.getElementById("spinner").style.display="none";n.getMap();""!=u.initial_lat?i.centerMapOnCoords(u.initial_lat,u.initial_lng,18):i.centerMapOnCoords(-34.901113,-56.164531,16)}),e.searchMode="calle.lugar",e.location={calle:null,esquina:null,lugar:null};var s={tipo:null,pathParams:[]};e.$on("$stateChangeSuccess",function(){e.ionAutocompleteElement=angular.element(document.getElementsByClassName("ion-autocomplete")),e.ionAutocompleteElement.bind("touchend click focus",e.onClick)}),e.initReport=function(){var t,o=L.icon({iconUrl:"img/pin@x2.png",iconSize:[70,110],iconAnchor:[-18,55]});"unConfirmed"==e.reportButton.state&&(e.reportButton.text="Confirmar",e.reportButton.state="about2Confirm",n.getMap().then(function(n){t=new L.marker(n.getCenter(),{icon:o,clickable:!1}).addTo(n),ReportService._new(),ReportService.current.setLatLng(n.getCenter()),e.ionAutocompleteElement=angular.element(document.getElementsByClassName("ion-autocomplete")),e.ionAutocompleteElement.bind("touchend click focus",e.onClick)}))},e.isNumeric=function(e){return!isNaN(parseFloat(e))&&isFinite(e)},e.searchLocation=function(t){var n;if(t&&t.length>=2){if("calle.lugar"==e.searchMode)n=r.searchLocationByStr(t);else{if(e.isNumeric(t.trim())){var o=[],a={descTipo:"NUMERO",nombre:t,codigo:t};return o[0]=a,o}n=r.searchEsquinaByStr({calle:e.selectedItem.codigo,esquina:t})}return n}return[]},e.onClick=function(){e.ionAutocompleteElement.controller("ionAutocomplete").showModal()},e.itemsClicked=function(t){if(e.clickedValueModel=t,e.selectedItem=t.item,e.ionAutocompleteElementSearch=angular.element(document.getElementsByClassName("ion-autocomplete-search")),"esquina.numero"==e.searchMode){s.pathParams=[],e.location.esquina=e.selectedItem,s.pathParams.push(e.location.calle.codigo),s.pathParams.push(e.location.esquina.codigo);var n="";e.isNumeric(e.selectedItem.nombre)?s.tipo="DIRECCION":(s.tipo="ESQUINA",n="esquina"),r.getLocationGeom(s).then(function(t){i.goToPlace(angular.extend({nombre:e.location.calle.nombre+" "+n+" "+e.selectedItem.nombre,geom:t.geoJSON},t),e),e.searchMode="calle.lugar",e.ionAutocompleteElementSearch.attr("placeholder","Buscar calle"),e.externalModel=[]})}else e.location.calle=e.selectedItem,e.searchMode="esquina.numero",e.ionAutocompleteElementSearch.attr("placeholder","Esquina o n√∫mero"),e.ionAutocompleteElement.controller("ionAutocomplete").showModal(),e.preselectedSearchItems=[]},e.itemsCanceled=function(t){var n=parseInt(t.searchQuery);Number.isInteger(n)&&(s.tipo="DIRECCION",s.pathParams.push(e.location.calle.codigo),s.pathParams.push(n),r.getLocationGeom(s).then(function(t){i.goToPlace(angular.extend({nombre:e.selectedItem.nombre+" "+n},t),e),e.searchMode="calle.lugar"},function(t){c.showAlert("Error","No existe esa direccion").then(function(t){e.ionAutocompleteElement.controller("ionAutocomplete").showModal()})}))}}]),pmb_im.services.factory("AuthService",["$http","$cordovaFileTransfer","ConfigService",function(e,t,n){var o=n.baseURL+"/auth/ajax/";return{sign_in:function(t,n){return e.get(o+"sign_in",{params:{password_sign_in:t,email:n}})},sign_out:function(t,n){return e.get(o+"sign_out",{params:{password_sign_in:t,email:n}})},create_user:function(t,n,a,r,i){return e.get(o+"create_user",{params:{form_email:t,name:n,password_register:a,identity_document:r,phone:i}})},change_password:function(t,n,a,r,i){return e.get(o+"create_user",{params:{login_email:t,name:n,password_register:a,identity_document:r,phone:i}})},edit_user:function(n,a,r,i,l,c,u){if(null!=u&&""!=u){var s={fileKey:"photo",params:{email:n,password_sign_in:a,name:r,new_email:i,identity_document:l,phone:c}},m=!0;return t.upload(o+"edit_user",u,s,m)}return e.get(o+"edit_user",{params:{email:n,password_sign_in:a,name:r,new_email:i,identity_document:l,phone:c}})}}}]),pmb_im.services.factory("CategoriesService",["$http","LocationsService","ConfigService","DBService",function(e,t,n,o){var a=n.baseURL+"/report/new/ajax";return{all:function(){return e.get(a,{params:{lat:t.new_report_lat,lon:t.new_report_lng,format:"json"}})},getCachedCategories:function(){return o.getCategories()}}}]),pmb_im.services.factory("ConfigService",["$http",function(e){var t={};return t.baseURL="http://dondereciclo.development.datauy.org",t}]),pmb_im.services.factory("ConnectivityService",["$cordovaNetwork",function(e){return{isOnline:function(){return ionic.Platform.isWebView()?e.isOnline():navigator.onLine},isOffline:function(){return ionic.Platform.isWebView()?!e.isOnline():!navigator.onLine}}}]),pmb_im.services.factory("ContactService",["$http","ConfigService",function(e,t){var n=t.baseURL+"/datauy/contact/";return{send_contact:function(t,o,a,r){return e.get(n+t+"/"+o+"/"+a+"/"+r,{params:{}})}}}]),pmb_im.services.factory("ContainerService",["$http","leafletData","ConfigService",function(e,t,n){function o(e){angular.extend(this,e)}var a=n.baseURL+"/report/ajax/";return o.getById=function(t){var n=a+t;return e.get(n).then(function(e){return e})},o._default=function(){var e={lat:0,lon:0,title:null,detail:null,may_show_name:1,category:null,phone:null,pc:"",file:null,name:null,email:null,submit_sign_in:1,password_sign_in:null,remember_me:1};return new o(e)},o._all=[],o.current={},o._new=function(){return o._default()},o.build=function(e){return new o(e)},o.prototype.setLatLng=function(e,t){this.lat=e,this.lon=t},o}]),pmb_im.services.factory("DBService",["$q",function(e){function t(e,t,n,o,r,i){var l={_id:"user-logged",name:e,email:t,password:n,identity_document:o,phone:r,picture_url:i};a().then(function(e){return l._rev=e._rev,f.put(l)})["catch"](function(e){return f.put(l)})}function n(){var e={_id:"done-walkthrough",status:"done"};return f.put(e)}function o(){return f.get("done-walkthrough")}function a(){return f.get("user-logged")}function r(){f.get("user-logged").then(function(e){return f.remove(e)})}function i(){return f=new PouchDB("pmb_local_db")}function l(e){var t=new Date,n="report_"+t.getFullYear()+(t.getMonth()+1)+t.getDate()+t.getMilliseconds();return e._id=n,f.put(e)}function c(e){return f.put(e)}function u(){return f.get("categories-list")}function s(e){u().then(function(t){return e._rev=t._rev,f.put(e)})["catch"](function(t){return e._id="categories-list",f.put(e)})}function m(e){return f.get(e)}function d(){return f.allDocs({include_docs:!0,attachments:!1,startkey:"report_",endkey:"report_Ôøø"})}function p(e){f.get(e).then(function(e){return f.remove(e)})}function _(e){return f.remove(e)}var f;return{initDB:i,saveUser:t,getUser:a,eraseUser:r,saveReport:l,getReport:m,getAllReports:d,updateReport:c,deleteReport:p,deleteGivenReport:_,getCategories:u,saveCategories:s,getDoneWalkthrough:o,saveDoneWalkthrough:n}}]),pmb_im.services.factory("ErrorService",["$http","$ionicPopup","ValidationService",function(e,t,n){return{http_response_is_successful:function(e,t){var n=document.getElementById(t);return 0==e.data.result?(n.innerHTML="<h3>"+e.data.message+"</h3>",n.style.display="block",!1):(n.style.display="none",!0)},http_response_is_successful_ajax:function(e){return 0!=e.data.result},http_response_is_successful_popup:function(e){if(0==e.data.result){var n=t.alert({title:"Error",template:e.data.message});return n.then(function(e){return!1}),!1}return!0},http_data_response_is_successful:function(e,t){var n=document.getElementById(t);return 0==e.result?(n.innerHTML="<h3>"+e.message+"</h3>",n.style.display="block",!1):(n.style.display="none",!0)},http_data_response_is_successful_ajax:function(e){return 0!=e.result},show_error_message:function(e,t){var n=document.getElementById(e);return n.innerHTML="<h3>"+t+"</h3>",n.style.display="block",!1},show_error_message_popup:function(e){var n=t.alert({title:"Error",template:e});return n.then(function(e){return!1}),!1},check_fields:function(e,t){var o="";if(e.forEach(function(e){"notNull"==e.type&&(n.validate_not_empty(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no puede estar vac√≠o.</h3>')),"email"==e.type&&(n.validate_email(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no es una direcci√≥n de correo v√°lida.</h3>')),"iddoc_uy"==e.type&&(n.validate_iddoc_uy(e.value)||(o=o+'<h3>- El campo "'+e.name+'" no es una c√©dula uruguaya v√°lida.</h3>')),"two_words"==e.type&&(n.validate_two_words(e.value)||(o=o+'<h3>- El campo "'+e.name+'" debe contener al menos dos palabras.</h3>'))}),""==o)return!0;var a=document.getElementById(t);return a.innerHTML=o,a.style.display="block",!1},check_field:function(e,t,o){var a=!0;return"notNull"==t&&(n.validate_not_empty(e.value)||(a=!1,o.innerHTML="Debes completar<br/>el campo "+e.name)),"email"==t&&(n.validate_email(e.value)||(a=!1,o.innerHTML="El campo "+e.name+"<br/>no es un email v√°lido")),"iddoc_uy"==t&&(n.validate_iddoc_uy(e.value)||(a=!1)),"two_words"==t&&(n.validate_two_words(e.value)||(a=!1)),"textarea"==t&&(n.validate_not_empty(e.innerHTML)||(a=!1,o.innerHTML="Debes completar<br/>el campo "+e.name)),"select"==t&&(n.validate_not_empty(e.innerHTML)||(a=!1,o.innerHTML="Debes completar<br/>el campo "+e.name)),a?e.style.borderColor="#979797":e.style.borderColor="red",a}}}]),pmb_im.services.factory("FaqService",["$http","ConfigService",function(e,t){var n=t.baseURL+"/faq";return{all:function(){return e.get(n,{params:{ajax:"1"}})}}}]),pmb_im.services.factory("Loader",["$ionicLoading","$timeout","$ionicPopup",function(e,t,n){var o={showLoading:function(t){t=t||"Loading...",e.show({template:t})},hideLoading:function(){e.hide()},toggleLoadingWithMessage:function(e,n){var o=this;o.showLoading(e),t(function(){o.hideLoading()},n||3e3)},confirmPopup:function(e,t){var o=n.confirm({title:e,template:t});return o},showAlert:function(e,t){var o=n.alert({title:e,template:t});return o}};return o}]),pmb_im.services.factory("LocationsService",[function(){var e={};return e.initial_lat="",e.initial_lng="",e.new_report_lat="",e.new_report_lng="",e.save_initial_position=function(t){e.initial_lat=t.coords.latitude,e.initial_lng=t.coords.longitude},e.save_new_report_position=function(t,n){e.new_report_lat=t,e.new_report_lng=n},e.savedLocations=[],e}]),pmb_im.services.factory("MapService",["leafletData","$compile",function(e,t){proj4.defs("EPSG:32721","+proj=utm +zone=21 +south +ellps=WGS84 +datum=WGS84 +units=m +no_defs");var n={};return n.goToPlace=function(t,n){var o={properties:{nombre:t.nombre},crs:{type:"name",properties:{name:"urn:ogc:def:crs:EPSG::32721"}}};o=angular.extend(o,t.geom),e.getMap().then(function(e){var t;L.Proj.geoJson(o,{pointToLayer:function(e,n){return t=n,L.marker(n)}});e.setView(t,18)})},n.centerMapOnCoords=function(t,n,o){e.getMap().then(function(e){e.setView(new L.LatLng(t,n),o)})},n}]),pmb_im.services.factory("PMBService",["$http","leafletData","$cordovaFileTransfer","ConfigService",function(e,t,n,o){var a=o.baseURL,r={report:function(t){if(t.file){var o={fileKey:"photo",fileName:"image.jpeg",chunkedMode:!1,mimeType:"image/jpeg",params:t};o.headers={Connection:"Close"};var r=!0;return n.upload(a+"/report/new/mobile",t.file,o,r)}return e.get(a+"/report/new/mobile",{params:t})},subscribe:function(t,n){return e.get(a+"/alert/subscribe_ajax",{params:{rznvy:t,id:n,type:"updates"}})},abuse:function(t,n,o,r,i){return e.get(a+"/contact/submit_ajax",{params:{em:t,id:n,name:o,subject:r,message:i}})},hide:function(t){var n="/report/delete_ajax/"+t;return e.get(a+n,{params:{}})},comment:function(t,n,o,r,i,l,c){return e.get(a+"/report/update_ajax",{params:{submit_update:1,id:t,may_show_name:i,add_alert:l,fixed:c,update:n,name:o,form_rznvy:r}})}};return r}]),pmb_im.services.factory("PopUpService",["$ionicPopup","ValidationService",function(e,t){return{show_alert:function(t,n){var o=e.alert({title:t,template:n});return o.then(function(e){return!0}),!0},confirmPopup:function(t,n){var o=e.confirm({title:t,template:n});return o},askForOneValuePopUp:function(n,o,a,r,i){$scope=n;var l=e.show({template:r+': <input type="text" id="one_value_popup"><div id="error_container_inside"></div>',title:o,subTitle:a,scope:$scope,buttons:[{text:"Cancelar"},{text:"<b>Enviar</b>",type:"button-positive",onTap:function(e){var n="",o=document.getElementById("one_value_popup").value;if("notNull"==i&&(t.validate_not_empty(o)||(n=n+'<h3>- El campo "'+r+'" no puede estar vac√≠o.</h3>')),"email"==i&&(t.validate_email(o)||(n=n+'<h3>- El campo "'+r+'" no es una direcci√≥n de correo v√°lida.</h3>')),"iddoc_uy"==i&&(t.validate_iddoc_uy(o)||(n=n+'<h3>- El campo "'+r+'" no es una c√©dula uruguaya v√°lida.</h3>')),"two_words"==i&&(t.validate_two_words(o)||(n=n+'<h3>- El campo "'+r+'" debe contener al menos dos palabras.</h3>')),""==n)return o;var a=document.getElementById("error_container_inside");a.innerHTML=n,a.style.display="block",e.preventDefault()}}]});return l}}}]),pmb_im.services.factory("locationAPI",["$http","$q","ApiImEndpoint","ApiDataEndpoint",function(e,t,n,o){var a="ubicacionesRestProd",r={};return r.searchLocationByStr=function(t){return e.get(n.url+"/"+a+"/calles",{method:"GET",params:{nombre:t}})},r.searchEsquinaByStr=function(t){return e.get(n.url+"/"+a+"/cruces/"+t.calle+"/",{params:{nombre:t.esquina}})},r.getLocationGeom=function(t){for(var o=n.url+"/"+a+r.getParamPathByTipo(t.tipo),i=0;i<t.pathParams.length;i++)o+="/"+t.pathParams[i];return e.get(o).then(function(e){return e.data})},r.getParamPathByTipo=function(e){var t={ESQUINA:"/esquina",DIRECCION:"/direccion"};return t[e]},r}]),pmb_im.services.factory("_",[function(){return window._}]),pmb_im.services.factory("UserService",["$http",function(e){var t={};return t.name=null,t.email=null,t.password=null,t.identity_document=null,t.phone="",t.picture_url="url(./img/icon-user-anonymous.png)",t.save_user_data=function(e,n,o,a,r,i){t.name=e,t.email=n,t.password=o,t.identity_document=a,t.phone=r,t.picture_url=i},t.erase_user_data=function(){t.name=null,t.email=null,t.password=null,t.identity_document=null,t.phone=null,t.picture_url=null},t.get_user_data=function(){},t.add_photo=function(e){t.picture_url=e},t.isLogged=function(){return null!=t.name&&""!=t.name},t}]),pmb_im.services.factory("ValidationService",["$http","$ionicPopup",function(e,t){return{validate_not_empty:function(e){return null!=e&&"undefined"!=e&&""!=e},validate_two_words:function(e){if(null!=e&&"undefined"!=e&&""!=e){var t=e.split(" ").filter(function(e){return""!==e});return t.length>1}return!1},validate_email:function(e){if(null!=e&&"undefined"!=e&&""!=e){var t=/^(([^<>()\[\]\\.,;:\s@"]+(\.[^<>()\[\]\\.,;:\s@"]+)*)|(".+"))@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}])|(([a-zA-Z\-0-9]+\.)+[a-zA-Z]{2,}))$/;return t.test(e)}return!1},validate_iddoc_uy:function(e){if(null!=e&&"undefined"!=e&&""!=e){e=e.replace(/\D/g,"");var t=e[e.length-1],n=0,o=0;if(e.length<=6)for(o=e.length;o<7;o++)e="0"+e;for(o=0;o<7;o++)n+=parseInt("2987634"[o])*parseInt(e[o])%10;var a;return a=n%10===0?0:10-n%10,t==a}return!1}}}]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
